

When presented this challenge, I was thinking this would be a good opportunity to combine Cucumber, Selenium, Appuim as I was already familiar with Selenium Cucumber and knowing that Babbel uses Appium for mobile test automation It seemed only to be a good way to tackle this challenge.
Overall I really enjoyed this hiring challenge as it truly tests the necessary knowledge of Test Automation Engineering
I could spend weeks on perfecting this more and more so it was really hard to find a cut of point to hand this project in.
I’m very pleased with my result as this is the first time that I have done anything with mobile Automation Testing.



Installation
QA test app  https://github.com/babbel-careers/automation-challenge

IntelliJ - IDE(Community version is fine for this project) https://www.jetbrains.com/idea/download/#section=mac

Android Studio https://developer.android.com/studio/
after installing check if android studio needs to be restarted

Install Java 11
after that do the following in the terminal enter nano ~/.profile or open -e .bash_profile
Copy these commands and set your own username and JDK version and paste on bash profile:

export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_192.jdk/Contents/Home
export ANDROID_HOME=/Users/<username>/Library/Android/sdk
export PATH=$/Library/Java/JavaVirtualMachines/jdk1.8.0_192.jdk/Contents/Home/
bin:$PATH
export PATH="/Users/ <username> /Library/Android/sdk/platform-tools":$PATH

then save from File > Save and close the bash profile text editor.
Now, your Java and Android home environment variable has been set.

Install all the pre-requisites for Appium

Install Xcode command line (use Command: Xcode-select --install)
Install Homebrew with below command:
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

Use following commands
brew install npm
Check if nodeJS is installed with below command
node -v
npm install carthage
npm install -g appium
npm install appium-doctor -g


run appium-doctor
Add missing dependencies

Open the QA app in Android Studio

Install the Pixel 4 API 30 emulator platform 11
The test will run on this device (Later you can change it in the test framework under Capabilities.java)
Run the App on the Emulator
Close the Project

The Android Studio welcome window will appear, click on the dropdown menu on the very left and select “Virtual Device Manager”

￼

Select Pixel 4 API 30

￼

Now we are almost ready to Run our tests for android

Open this test framework in IntelliJ

After the Build has finished:

Go to src/main/java/androidSetUp/Capabilities.java
In line 25 add the file path of the app-debug.apk that way the Server knows which app we are running our automation on. (it should look something like this “/automation-challenge-master/android/app-debug.apk”)

Then proceed to build.gradle
on the bottom of the file there are two tasks cucumberWeb() and cucumberAndroid()
First run cucumberWeb() and after that run cucumberAndroid()



Automation challenge
